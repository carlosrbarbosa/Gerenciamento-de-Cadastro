// JavaScript Document 
function ValidadeCadastro(form1)
{
	with (form1) 
	{
		if (txtnome.value == "") {
			alert('Favor preencher o campo Nome!');
			txtnome.focus();
			return false;
			
			if(txtemail.value == ""){
			alert('Favor preencher o campo Email')
			}
		}


	}
	loader_show();
	return true;
}

//adiciona mascara de cnpj 
function MascaraCNPJ(txtcpf_cnpj){ 
        if(mascaraInteiro(txtcpf_cnpj)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtcpf_cnpj, '00.000.000/0000-00', event); 
} 
function ValidarCPF(Objcpf){ 
        var cpf = Objcpf.value; 
        exp = /\.|\-/g 
        cpf = cpf.toString().replace( exp, "" );  
        var digitoDigitado = eval(cpf.charAt(9)+cpf.charAt(10)); 
        var soma1=0, soma2=0; 
        var vlr =11; 
         
        for(i=0;i<9;i++){ 
                soma1+=eval(cpf.charAt(i)*(vlr-1)); 
                soma2+=eval(cpf.charAt(i)*vlr); 
                vlr--; 
        }        
        soma1 = (((soma1*10)%11)==10 ? 0:((soma1*10)%11)); 
        soma2=(((soma2+(2*soma1))*10)%11); 
         
        var digitoGerado=(soma1*10)+soma2; 
        if(digitoGerado!=digitoDigitado)         
                alert('CPF Invalido!');          
} 


//adiciona mascara de cep 
function MascaraCep(txtcep){ 
                if(mascaraInteiro(txtcep)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtcep, '00000-000', event); 
} 
//Valida Cep 
function ValidaCep(txtcep){ 
        exp = /\d{2}\.\d{3}\-\d{3}/ 
        if(!exp.test(txtcep.value)) 
                alert('Numero de Cep Invalido!');                
} 
 
//adiciona mascara de data 
function MascaraDataAtendimento(txtdata_atendimento){ 
        if(mascaraInteiro(txtdata_atendimento)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtdata_atendimento, '00/00/0000', event); 
} 
function MascaraDataInicial(txtdata_inicial){ 
        if(mascaraInteiro(txtdata_inicial)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtdata_inicial, '00/00/0000', event); 
} 
function MascaraDataFinal(txtdata_final){ 
        if(mascaraInteiro(txtdata_final)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtdata_final, '00/00/0000', event); 
} 

function MascaraDatatermino(txtdatatermino){ 
        if(mascaraInteiro(txtdatatermino)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtdatatermino, '00/00/0000', event); 
} 
 //adiciona mascara ao Telefone
function MascaraTelefone(txttelefone){   
        if(mascaraInteiro(txttelefone)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txttelefone, '(00) 0000-0000', event); 
} 
 
//adiciona mascara ao CPF 
function MascaraCPF(txtcpf_cnpj){ 
        if(mascaraInteiro(txtcpf_cnpj)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtcpf_cnpj, '000.000.000-00', event); 
} 
//adiciona mascara ao RG 
function MascaraRG(txtrg){ 
        if(mascaraInteiro(txtrg)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtrg, '00.000.000-00', event);
} 
//MASCARA QUE COLOCA OS PONTOS CERTO NOS VALORES
function MascaraMoedaComissao(txtvalorcomissao){ 
        if(mascaraInteiro(txtvalorcomissao)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtvalorcomissao, '0000.00', event);
} 
function MascaraMoeda(txtvalor){ 
        if(mascaraInteiro(txtvalor)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtvalor, '0000.00', event);
} 
 
//valida telefone 
function ValidaTelefone(txttelefone){ 
        exp = /\(\d{2}\)\ \d{4}\-\d{4}/ 
        if(!exp.test(txttelefone.value)) 
        alert('Numero de Telefone Invalido!'); 
} 
function ValidaCelular(txtcelular){ 
        exp = /\(\d{2}\)\ \d{4}\-\d{4}/ 
        if(!exp.test(txtcelular.value)) 
                alert('Numero de Telefone Invalido!'); 
} 
 
//valida CEP 

 
//valida data 
function ValidaData(data){ 
        exp = /\d{2}\/\d{2}\/\d{4}/ 
        if(!exp.test(data.value)) 
                alert('Data Invalida!');                         
} 
 
//valida o CPF digitado 

 
//valida numero inteiro com mascara 
function mascaraInteiro(){ 
        if (event.keyCode < 48 || event.keyCode > 57){ 
                event.returnValue = false; 
                return false; 
        } 
        return true; 
} 
 
//valida o CNPJ digitado 
function ValidarCNPJ(ObjCnpj){ 
        var cnpj = ObjCnpj.value; 
        var valida = new Array(6,5,4,3,2,9,8,7,6,5,4,3,2); 
        var dig1= new Number; 
        var dig2= new Number; 
         
        exp = /\.|\-|\//g 
        cnpj = cnpj.toString().replace( exp, "" );  
        var digito = new Number(eval(cnpj.charAt(12)+cnpj.charAt(13))); 
                 
        for(i = 0; i<valida.length; i++){ 
                dig1 += (i>0? (cnpj.charAt(i-1)*valida[i]):0);   
                dig2 += cnpj.charAt(i)*valida[i];        
        } 
        dig1 = (((dig1%11)<2)? 0:(11-(dig1%11))); 
        dig2 = (((dig2%11)<2)? 0:(11-(dig2%11))); 
         
        if(((dig1*10)+dig2) != digito)   
                alert('CNPJ Invalido!'); 
                 
} 
 
//formata de forma generica os campos 
function formataCampo(campo, Mascara, evento) {  
        var boleanoMascara;  
         
        var Digitato = evento.keyCode; 
        exp = /\-|\.|\/|\(|\)| /g 
        campoSoNumeros = campo.value.toString().replace( exp, "" );  
    
        var posicaoCampo = 0;     
        var NovoValorCampo=""; 
        var TamanhoMascara = campoSoNumeros.length;;  
         
        if (Digitato != 8) { // backspace  
                for(i=0; i<= TamanhoMascara; i++) {  
                        boleanoMascara  = ((Mascara.charAt(i) == "-") || (Mascara.charAt(i) == ".") 
                                                                || (Mascara.charAt(i) == "/"))  
                        boleanoMascara  = boleanoMascara || ((Mascara.charAt(i) == "(")  
                                                                || (Mascara.charAt(i) == ")") || (Mascara.charAt(i) == " "))  
                        if (boleanoMascara) {  
                                NovoValorCampo += Mascara.charAt(i);  
                                  TamanhoMascara++; 
                        }else {  
                                NovoValorCampo += campoSoNumeros.charAt(posicaoCampo);  
                                posicaoCampo++;  
                          }               
                  }       
                campo.value = NovoValorCampo; 
                  return true;  
        }else {  
                return true;  
        } 
}

function MascaraTelefone(txttelresidencial){  
        if(mascaraInteiro(txttelresidencial)==false){
                event.returnValue = false;
        }       
        return formataCampo(txttelresidencial, '(00) 0000-0000', event);
}
//adiciona mascara ao telefone
function MascaraTelComercial(txttelefone_comercial){  
        if(mascaraInteiro(txttelefone_comercial)==false){
                event.returnValue = false;
        }       
        return formataCampo(txttelefone_comercial, '(00) 0000-0000', event);
}
//adiciona mascara ao telefone
function MascaraComercial(txttelcomercial){  
        if(mascaraInteiro(txttelcomercial)==false){
                event.returnValue = false;
        }       
        return formataCampo(txttelcomercial, '(00) 0000-0000', event);
}
function MascaraCep(txtcep){ 
                if(mascaraInteiro(txtcep)==false){ 
                event.returnValue = false; 
        }        
        return formataCampo(txtcep, '00000-000', event); 
} 

function FormataReais(fld, milSep, decSep, e) {
var sep = 0;
var key = '';
var i = j = 0;
var len = len2 = 0;
var strCheck = '0123456789';
var aux = aux2 = '';
var whichCode = (window.Event) ? e.which : e.keyCode;
if (whichCode == 13) return true;
key = String.fromCharCode(whichCode);  // Valor para o código da Chave
if (strCheck.indexOf(key) == -1) return false;  // Chave inválida
len = fld.value.length;
for(i = 0; i < len; i++)
if ((fld.value.charAt(i) != '0') && (fld.value.charAt(i) != decSep)) break;
aux = '';
for(; i < len; i++)
if (strCheck.indexOf(fld.value.charAt(i))!=-1) aux += fld.value.charAt(i);
aux += key;
len = aux.length;
if (len == 0) fld.value = '';
if (len == 1) fld.value = '0'+ decSep + '0' + aux;
if (len == 2) fld.value = '0'+ decSep + aux;
if (len > 2) {
aux2 = '';
for (j = 0, i = len - 3; i >= 0; i--) {
if (j == 3) {
aux2 += milSep;
j = 0;
}
aux2 += aux.charAt(i);
j++;
}
fld.value = '';
len2 = aux2.length;
for (i = len2 - 1; i >= 0; i--)
fld.value += aux2.charAt(i);
fld.value += decSep + aux.substr(len - 2, len);
}
return false;
}
//Fim da Função FormataReais -->a